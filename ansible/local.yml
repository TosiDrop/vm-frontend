---
- name: Node Playbook
  hosts: all
  gather_facts: true
  become: true
  vars:
    manage_datadog: "{{ MANAGE_DATADOG | default('false') }}"
    manage_docker: "{{ MANAGE_DOCKER | default('true') }}"
  tasks:
    - name: NodePlaybook | Update Apt Cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: '{{ 60 * 60 * 24 }}'
      tags:
        - always
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: NodePlaybook | Include Geerlingguy Docker Role
      ansible.builtin.include_role:
        name: geerlingguy.docker
        apply:
          tags:
            - docker
      vars:
        docker_apt_arch: "{{ {'aarch64': 'arm64', 'x86_64': 'amd64'}[ansible_facts.architecture] }}"
        docker_compose_version: "v2.2.3"
        docker_users: "{{ DOCKER_USERS | default(['ubuntu']) }}"
        docker_daemon_options:
          log-driver: "local"
      tags:
        - always
      when: manage_docker | bool

    - name: NodePlaybook | Install DataDog
      ansible.builtin.include_role:
        name: datadog.datadog
        apply:
          tags:
            - datadog
      when: manage_datadog | bool
      vars:
        datadog_api_key: "{{ DD_API_KEY }}"
        datadog_site: "us5.datadoghq.com"
        datadog_additional_groups:
          - docker
        datadog_checks:
          # Configure haproxy to detect Koios frontend
          haproxy:
            instances:
              - use_openmetrics: true
                openmetrics_endpoint: http://localhost:8053/metrics
        datadog_config:
          apm_config:
            enabled: false
          logs_enabled: true
          process_config:
            enabled: "false" # string, per docs
          tags:
            - product:tosidrop

    - name: NodePlaybook | Include VM Frontend Role
      ansible.builtin.include_role:
        name: vm_frontend
        apply:
          tags:
            - vm_frontend
      tags:
        - always
