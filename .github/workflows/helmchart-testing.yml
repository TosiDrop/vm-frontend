name: Lint & Test Charts
on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: v3.14.4

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            joined=$(echo "$changed" | paste -sd "," -)
            echo "changed_charts=$joined" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        continue-on-error: true
        run: |
          # Additional arguments for Helm. Must be passed as a single quoted string
          # https://github.com/helm/chart-testing/blob/main/doc/ct_install.md
          ct install --target-branch ${{ github.event.repository.default_branch }} --helm-extra-args='--timeout 300s'

      - name: Helm install fallback for changed charts
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          echo "Running Helm installs for changed charts..."
          charts="${{ steps.list-changed.outputs.changed_charts }}"
          IFS=',' read -ra chart_array <<< "$charts"
          for chart_path in "${chart_array[@]}"; do
            chart_name=$(basename "$chart_path")
            echo "Installing $chart_name from $chart_path..."
            helm install "$chart_name" "$chart_path" \
              --namespace "${chart_name}-ci" \
              --create-namespace \
              --wait=false \
              --timeout 30s
          done
